# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ daddy ]
  schedule:
    - cron: '0 0 * * *' #Makes sense, we are testing against master
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Setup Zig
      # You may pin to the exact commit or the version.
      # uses: goto-bus-stop/setup-zig@41ae19e72e21b9a1380e86ff9f058db709fc8fc6
        uses: goto-bus-stop/setup-zig@v1.3.0
        with:
          version: master
          
      - run: zig version
      - run: zig env
      
      - name: Build
        run: zig build

      - name: Run Tests
        run: zig build test-lib
      # Runs a set of commands using the runners shell
      - name: Create Wasm Example
        run: zig build wasm-shared
        
      - name: Deploy Github Pages
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: rayluo/github-pages-overwriter@v1.2
        with:
          # [Optional] Determine the directory contains source code. Defaults to "docs"
          source-directory: public
      - name: Build artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          declare -a targets=("x86_64-windows" "x86_64-linux" "x86_64-macos")
          mkdir -p "artifacts/"
          for target in "${targets[@]}"; do
            mkdir -p artifacts/$target
            echo "Building target ${target}..."	    
            zig build -Dtarget=${target} -Drelease-safe --prefix artifacts/${target}/
            sed -e '1,5d' < README.md > artifacts/${target}/README.md
            cp LICENSE artifacts/${target}/
            cd artifacts/${target}/
            tar cfJ ${target}.tar.xz *.md bin/*
            mv ${target}.tar.xz ../
            cd ../..
          done
      - name: Upload artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: builds
          path: artifacts/*.tar.xz
